{"version":3,"sources":["outside/outside.js","inside/inside.js","App.js","serviceWorker.js","index.js","images/rooms/bar.jpg","images/rooms/lobby.jpg","images/rooms/lounge.jpg","images/rooms/maze.jpg","images/rooms/room.jpg"],"names":["Outside","react_default","a","createElement","className","href","target","Link","to","id","Component","Inside","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","show","selectedItem","selectedTitle","selectedDesc","selectedImg","handleShow","bind","assertThisInitialized","handleClose","rooms","title","class","img","lounge","desc","bar","room","lobby","maze","setState","console","log","selectedID","_this2","map","key","onClick","Modal_default","onHide","bsSize","animation","src","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"+NA+BeA,0LAvBP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,wBAAf,qBAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAW,uBAAd,qJAEuFH,EAAAC,EAAAC,cAAA,2BAFvF,kDAGmDF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,+BAAgCD,UAAW,OAAQE,OAAQ,UAApE,0BAIvDL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,WACLP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASK,GAAG,SAA9B,kBAhBEC,oICoHPC,cA7GX,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACxBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAML,EAAOC,KAERQ,MAAQ,CACTC,MAAM,EACNC,aAAc,EACdC,cAAe,GACfC,aAAc,GACdC,YAAa,IAGjBZ,EAAKa,WAAab,EAAKa,WAAWC,KAAhBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAClBA,EAAKgB,YAAchB,EAAKgB,YAAYF,KAAjBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAEnBA,EAAKiB,MAAQ,CACT,CACItB,GAAM,EACNuB,MAAS,sBACTC,MAAS,SACTC,IAAOC,IACPC,KAAQ,mMAEZ,CACI3B,GAAM,EACNuB,MAAS,gBACTC,MAAS,MACTC,IAAOG,IACPD,KAAQ,8YAEZ,CACI3B,GAAM,EACNuB,MAAS,WACTC,MAAS,QACTC,IAAOI,IACPF,KAAQ,qfAEZ,CACI3B,GAAM,EACNuB,MAAS,YACTC,MAAS,YACTC,IAAOK,IACPH,KAAQ,iOAEZ,CACI3B,GAAM,EACNuB,MAAS,iBACTC,MAAS,OACTC,IAAOM,IACPJ,KAAQ,khBAhDQtB,6EAsDxBG,KAAKwB,SAAS,CAAEnB,MAAM,uCAGfb,GACPiC,QAAQC,IAAIlC,GACZQ,KAAKwB,SAAS,CAACG,WAAYnC,IAC3BQ,KAAKwB,SAAS,CAACnB,MAAM,IACrBL,KAAKwB,SAAS,CAACjB,cAAeP,KAAKc,MAAMtB,GAAIuB,QAC7Cf,KAAKwB,SAAS,CAAChB,aAAcR,KAAKc,MAAMtB,GAAI2B,OAC5CnB,KAAKwB,SAAS,CAACf,YAAaT,KAAKc,MAAMtB,GAAIyB,uCAGtC,IAAAW,EAAA5B,KACL,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,KACLP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASK,GAAG,QAA9B,SAIJR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBK,GAAG,aACtCR,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBAAhB,oMAGCa,KAAKc,MAAMe,IAAI,SAAAR,GAAI,OAChBrC,EAAAC,EAAAC,cAAA,OAAK4C,IAAKT,EAAK7B,IACXR,EAAAC,EAAAC,cAAA,UAAQM,GAAI6B,EAAK7B,GACTuC,QAAS,kBAAMH,EAAKlB,WAAWW,EAAK7B,KACpCL,UAAW,uBAAyBkC,EAAKL,OAC5CK,EAAKN,UAIlB/B,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAOoB,KAAML,KAAKI,MAAMC,KACjB4B,OAAQjC,KAAKa,YACbqB,OAAO,QACPC,WAAW,GACdnD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,cACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBACZH,EAAAC,EAAAC,cAAA,OAAKkD,IAAKpC,KAAKI,MAAMK,eAEzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qBACXa,KAAKI,MAAMG,eAEhBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,oBACXa,KAAKI,MAAMI,yBApGvBf,aCUN4C,mLAfX,OACIrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACItD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACIvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5D,IACjCC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWjD,eAR7CD,aCOEmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,eAAe,SDqH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,wDE/HnBC,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.b2b648ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../styles/index.css';\nimport './outside.css';\n\nclass Outside extends Component {\n    render() {\n        return (\n            <div className=\"outside fadeIn fadeOut\">\n                <div className={\"outside__text\"}>\n                    <h1 className={\"outside__text__title\"}>\n                        The Stanley Hotel\n                    </h1>\n                    <p className={\"outside__text__desc\"}>\n                        The Stanley Hotel is a historic hotel in Estes Park, Colorado.\n                        Stephen King famously visited The Stanley and was inspired to write his 1977 novel <em>The Shining. </em>\n                        All information on this website is pulled from <a href={\"http://theshining.wikia.com/\"} className={\"link\"} target={\"_blank\"}>theshining.wikia.com</a>\n                    </p>\n                </div>\n\n                <Link to=\"/inside\">\n                    <button className=\"button\" id=\"enter\">\n                        enter\n                    </button>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default Outside;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-bootstrap/lib/Modal';\nimport '../styles/index.css';\nimport './inside.css';\nimport bar from \"../images/rooms/bar.jpg\";\nimport lobby from \"../images/rooms/lobby.jpg\";\nimport lounge from \"../images/rooms/lounge.jpg\";\nimport maze from \"../images/rooms/maze.jpg\";\nimport room from \"../images/rooms/room.jpg\";\n\n\nclass Inside extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            show: false,\n            selectedItem: 0,\n            selectedTitle: \"\",\n            selectedDesc: \"\",\n            selectedImg: \"\"\n        };\n\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n\n        this.rooms = [\n            {\n                \"id\": 0,\n                \"title\": \"The Colorado Lounge\",\n                \"class\": \"lounge\",\n                \"img\": lounge,\n                \"desc\": \"The Colorado Lounge is a large room inside of the Overlook Hotel. The Colorado Lounge is located off a section of The Lobby, and is based on the similarly themed lounge in the Ahwahnee Hotel.\"\n            },\n            {\n                \"id\": 1,\n                \"title\": \"The Gold Room\",\n                \"class\": \"bar\",\n                \"img\": bar,\n                \"desc\": \"The Gold Room, or The Gold Ballroom is a large ballroom contained within the Overlook Hotel. The Red Bathroom is attached to the Gold Room. In the book, it was named The Colorado Lounge. The original name was used for the 1980 film's sitting room, which is a room where guests can relax and read or chat. The Gold Room is presumed to be the most haunted room in the hotel, besides Room 217/237.\"\n            },\n            {\n                \"id\": 2,\n                \"title\": \"Room 237\",\n                \"class\": \"suite\",\n                \"img\": room,\n                \"desc\": 'Room 237, not to be confused with the documentary of the same name, was a room in the Overlook Hotel in The Shining. In the book it was called 217.One time Danny Torrance visited this room after a ball strangely rolled to him from its open doors. Later, he claimed that a \"crazy woman\" tried to strangle him. Jack Torrance then entered 237, in search of what his son claimed to have confronted. He instead encountered a young naked woman in the bathroom, having a bath who came out and kissed him.'\n            },\n            {\n                \"id\": 3,\n                \"title\": \"The Lobby\",\n                \"class\": \"reception\",\n                \"img\": lobby,\n                \"desc\": \"The Lobby is the grand front entrance in the Overlook Hotel. It possesses the reception area and leads to both The Gold Room and The Colorado Lounge. The lobby is based on the similarly themed lobby of the Ahwahnee Hotel.\"\n            },\n            {\n                \"id\": 4,\n                \"title\": \"The Hedge Maze\",\n                \"class\": \"maze\",\n                \"img\": maze,\n                \"desc\": 'The hedge maze refers to the labyrinth of hedges found at the Overlook Hotel in the 1980 film version of The Shining. The 1977 novel and the 1997 miniseries versions of The Shining use moving topiary animals in place of the maze. In 2015, The Stanley Hotel, the original hotel which Stephen King used as a basis when he first wrote The Shining, installed its own hedge maze in order to pay homage to its Shining roots. Before this it had neither a maze, nor the signature topiary animals author Stephen King once wrote about.'\n            }\n        ];\n    }\n\n    handleClose() {\n        this.setState({ show: false });\n    }\n\n    handleShow(id) {\n        console.log(id);\n        this.setState({selectedID: id});\n        this.setState({show: true});\n        this.setState({selectedTitle: this.rooms[id].title});\n        this.setState({selectedDesc: this.rooms[id].desc});\n        this.setState({selectedImg: this.rooms[id].img});\n    }\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <button className=\"button\" id=\"back\">\n                        exit\n                    </button>\n                </Link>\n                <div className=\"inside fadeIn fadeOut\" id=\"reception\">\n                    <div className={\"inside__text\"}>\n                        This following map is The Stanley Hotel reimagined through the eyes of King when he visited the hotel for the first time, and which rooms may have inspired key places and events from the book.\n                    </div>\n                    {this.rooms.map(room => (\n                        <div key={room.id}>\n                            <button id={room.id}\n                                    onClick={() => this.handleShow(room.id)}\n                                    className={\"button button--room \" + room.class}>\n                                {room.title}\n                            </button>\n                        </div>\n                    ))}\n                    <Modal show={this.state.show}\n                           onHide={this.handleClose}\n                           bsSize=\"large\"\n                           animation={false}>\n                        <div className={\"room-modal\"}>\n                            <div className={\"room-modal__img\"}>\n                                <img src={this.state.selectedImg}></img>\n                            </div>\n                            <div className={\"room-modal__title\"}>\n                                {this.state.selectedTitle}\n                            </div>\n                            <div className={\"room-modal__desc\"}>\n                                {this.state.selectedDesc}\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Inside;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Outside from \"./outside/outside.js\";\nimport Inside from \"./inside/inside\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <div>\n                    <Switch>\n                        <Route exact path='/' component={Outside} />\n                        <Route exact path='/inside' component={Inside} />\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bar.d246e03b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lobby.89151899.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lounge.e9fe5a77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/maze.c847b324.jpg\";","module.exports = __webpack_public_path__ + \"static/media/room.d9606e14.jpg\";"],"sourceRoot":""}